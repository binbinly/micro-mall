// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: common/type.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 购物车结构
type Cart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId   int32   `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`      /// sku_id
	Title   string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                    /// 商品标题
	Price   float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`                  /// 商品价格
	Cover   string  `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`                    /// 商品封面
	SkuAttr string  `protobuf:"bytes,5,opt,name=sku_attr,json=skuAttr,proto3" json:"sku_attr,omitempty"` /// 商品销售属性
	Num     int32   `protobuf:"varint,7,opt,name=num,proto3" json:"num,omitempty"`                       /// 数量
}

func (x *Cart) Reset() {
	*x = Cart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cart) ProtoMessage() {}

func (x *Cart) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cart.ProtoReflect.Descriptor instead.
func (*Cart) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{0}
}

func (x *Cart) GetSkuId() int32 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *Cart) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Cart) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Cart) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *Cart) GetSkuAttr() string {
	if x != nil {
		return x.SkuAttr
	}
	return ""
}

func (x *Cart) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

// 用户令牌信息
type MemberToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *Member `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"` /// 会员信息
	Token  string  `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`   /// 令牌
}

func (x *MemberToken) Reset() {
	*x = MemberToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberToken) ProtoMessage() {}

func (x *MemberToken) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberToken.ProtoReflect.Descriptor instead.
func (*MemberToken) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{1}
}

func (x *MemberToken) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *MemberToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 会员基础信息
type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            /// 用户id
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` /// 用户名
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"` /// 昵称
	Sign     string `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"`         /// 用户签名
	Avatar   string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`     /// 用户头像
	Area     string `protobuf:"bytes,6,opt,name=area,proto3" json:"area,omitempty"`         /// 地区信息
	Phone    string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`       /// 手机号
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{2}
}

func (x *Member) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Member) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Member) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Member) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *Member) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Member) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *Member) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// 收货地址结构
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                 /// 主键
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                              /// 收货人
	Phone     string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`                            /// 收货人手机号
	Province  string `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`                      /// 省
	City      string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`                              /// 市
	County    string `protobuf:"bytes,7,opt,name=county,proto3" json:"county,omitempty"`                          /// 区/县
	Detail    string `protobuf:"bytes,8,opt,name=detail,proto3" json:"detail,omitempty"`                          /// 详细地址
	AreaCode  int32  `protobuf:"varint,9,opt,name=area_code,json=areaCode,proto3" json:"area_code,omitempty"`     /// 地区码
	IsDefault int32  `protobuf:"varint,10,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"` /// 是否设置默认地址
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{3}
}

func (x *Address) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Address) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Address) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Address) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetCounty() string {
	if x != nil {
		return x.County
	}
	return ""
}

func (x *Address) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *Address) GetAreaCode() int32 {
	if x != nil {
		return x.AreaCode
	}
	return 0
}

func (x *Address) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

// 订单详情结构
type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  /// 订单id
	OrderNo         string        `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                          /// 订单号
	Note            string        `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`                                               /// 订单会员备注
	TotalAmount     float64       `protobuf:"fixed64,4,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`            /// 订单总价
	Amount          float64       `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`                                         /// 订单金额
	CouponAmount    float64       `protobuf:"fixed64,6,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount,omitempty"`         /// 优惠券优惠金额
	FreightAmount   float64       `protobuf:"fixed64,7,opt,name=freight_amount,json=freightAmount,proto3" json:"freight_amount,omitempty"`      /// 运费
	PayAmount       float64       `protobuf:"fixed64,8,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`                  /// 支付金额
	PayType         int32         `protobuf:"varint,9,opt,name=pay_type,json=payType,proto3" json:"pay_type,omitempty"`                         /// 支付类型
	PayAt           int32         `protobuf:"varint,10,opt,name=pay_at,json=payAt,proto3" json:"pay_at,omitempty"`                              /// 支付时间
	CreateAt        int32         `protobuf:"varint,11,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`                     /// 订单创建时间
	Status          int32         `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`                                         /// 订单状态
	TradeNo         string        `protobuf:"bytes,13,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`                         /// 支付交易流水号
	DeliveryCompany string        `protobuf:"bytes,14,opt,name=delivery_company,json=deliveryCompany,proto3" json:"delivery_company,omitempty"` /// 物流公司
	DeliveryNo      string        `protobuf:"bytes,15,opt,name=delivery_no,json=deliveryNo,proto3" json:"delivery_no,omitempty"`                /// 物流单号
	Integration     int32         `protobuf:"varint,16,opt,name=integration,proto3" json:"integration,omitempty"`                               /// 所获积分
	Growth          int32         `protobuf:"varint,17,opt,name=growth,proto3" json:"growth,omitempty"`                                         /// 所获得成长值
	DeliveryAt      int32         `protobuf:"varint,18,opt,name=delivery_at,json=deliveryAt,proto3" json:"delivery_at,omitempty"`               ///发货时间
	ReceiveAt       int32         `protobuf:"varint,19,opt,name=receive_at,json=receiveAt,proto3" json:"receive_at,omitempty"`                  ///确认收货时间
	CommentAt       int32         `protobuf:"varint,20,opt,name=comment_at,json=commentAt,proto3" json:"comment_at,omitempty"`                  ///评价时间
	Address         *OrderAddress `protobuf:"bytes,21,opt,name=address,proto3" json:"address,omitempty"`                                        ///收货地址信息
	Items           []*OrderSku   `protobuf:"bytes,22,rep,name=items,proto3" json:"items,omitempty"`                                            /// 订单对应的商品列表
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{4}
}

func (x *Order) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Order) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *Order) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Order) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *Order) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Order) GetCouponAmount() float64 {
	if x != nil {
		return x.CouponAmount
	}
	return 0
}

func (x *Order) GetFreightAmount() float64 {
	if x != nil {
		return x.FreightAmount
	}
	return 0
}

func (x *Order) GetPayAmount() float64 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *Order) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *Order) GetPayAt() int32 {
	if x != nil {
		return x.PayAt
	}
	return 0
}

func (x *Order) GetCreateAt() int32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Order) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Order) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *Order) GetDeliveryCompany() string {
	if x != nil {
		return x.DeliveryCompany
	}
	return ""
}

func (x *Order) GetDeliveryNo() string {
	if x != nil {
		return x.DeliveryNo
	}
	return ""
}

func (x *Order) GetIntegration() int32 {
	if x != nil {
		return x.Integration
	}
	return 0
}

func (x *Order) GetGrowth() int32 {
	if x != nil {
		return x.Growth
	}
	return 0
}

func (x *Order) GetDeliveryAt() int32 {
	if x != nil {
		return x.DeliveryAt
	}
	return 0
}

func (x *Order) GetReceiveAt() int32 {
	if x != nil {
		return x.ReceiveAt
	}
	return 0
}

func (x *Order) GetCommentAt() int32 {
	if x != nil {
		return x.CommentAt
	}
	return 0
}

func (x *Order) GetAddress() *OrderAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Order) GetItems() []*OrderSku {
	if x != nil {
		return x.Items
	}
	return nil
}

// 订单列表结构
type OrderList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                         /// 订单id
	OrderNo string      `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"` /// 订单号
	Amount  float64     `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`                /// 订单金额
	Status  int32       `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                 /// 订单状态
	Time    int32       `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`                     /// 创建时间
	Items   []*OrderSku `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`                    /// 订单对应的商品列表
}

func (x *OrderList) Reset() {
	*x = OrderList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderList) ProtoMessage() {}

func (x *OrderList) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderList.ProtoReflect.Descriptor instead.
func (*OrderList) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{5}
}

func (x *OrderList) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderList) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderList) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderList) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderList) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *OrderList) GetItems() []*OrderSku {
	if x != nil {
		return x.Items
	}
	return nil
}

// 订单商品信息
type OrderSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId     int32   `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`            /// sku_id
	Title     string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                          /// 商品标题
	Cover     string  `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`                          /// 封面图
	Price     float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`                        /// 价格
	Num       int32   `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`                             /// 数量
	AttrValue string  `protobuf:"bytes,6,opt,name=attr_value,json=attrValue,proto3" json:"attr_value,omitempty"` /// 销售属性值
}

func (x *OrderSku) Reset() {
	*x = OrderSku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSku) ProtoMessage() {}

func (x *OrderSku) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSku.ProtoReflect.Descriptor instead.
func (*OrderSku) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{6}
}

func (x *OrderSku) GetSkuId() int32 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *OrderSku) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OrderSku) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *OrderSku) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderSku) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *OrderSku) GetAttrValue() string {
	if x != nil {
		return x.AttrValue
	}
	return ""
}

// 收货地址信息
type OrderAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`     /// 收货人
	Phone  string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`   /// 收货人手机号
	Area   string `protobuf:"bytes,3,opt,name=area,proto3" json:"area,omitempty"`     /// 地区
	Detail string `protobuf:"bytes,4,opt,name=detail,proto3" json:"detail,omitempty"` /// 详细地址
}

func (x *OrderAddress) Reset() {
	*x = OrderAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAddress) ProtoMessage() {}

func (x *OrderAddress) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAddress.ProtoReflect.Descriptor instead.
func (*OrderAddress) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{7}
}

func (x *OrderAddress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderAddress) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *OrderAddress) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *OrderAddress) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

// 秒杀场次信息
type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`     /// 场次id
	Name string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`  /// 场次名
	Open bool       `protobuf:"varint,3,opt,name=open,proto3" json:"open,omitempty"` /// 是否正在秒杀
	Skus []*KillSku `protobuf:"bytes,4,rep,name=skus,proto3" json:"skus,omitempty"`  /// 所有秒杀商品
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{8}
}

func (x *Session) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Session) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Session) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *Session) GetSkus() []*KillSku {
	if x != nil {
		return x.Skus
	}
	return nil
}

// 秒杀商品信息
type KillSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                             ///商品id
	Price         float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`                                      ///秒杀价格
	Count         int32   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`                                       ///秒杀数量
	Limit         int32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`                                       ///个人限购
	OriginalPrice float64 `protobuf:"fixed64,5,opt,name=original_price,json=originalPrice,proto3" json:"original_price,omitempty"` ///原价
	Title         string  `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`                                        ///标题
	Cover         string  `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`                                        ///封面
	Key           string  `protobuf:"bytes,8,opt,name=key,proto3" json:"key,omitempty"`                                            ///加密key
	Open          bool    `protobuf:"varint,9,opt,name=open,proto3" json:"open,omitempty"`                                         /// 是否正在秒杀
	StartAt       int32   `protobuf:"varint,10,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`                   /// 秒杀开始时间
}

func (x *KillSku) Reset() {
	*x = KillSku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillSku) ProtoMessage() {}

func (x *KillSku) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillSku.ProtoReflect.Descriptor instead.
func (*KillSku) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{9}
}

func (x *KillSku) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KillSku) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *KillSku) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *KillSku) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *KillSku) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *KillSku) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *KillSku) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *KillSku) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KillSku) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *KillSku) GetStartAt() int32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

// 首页数据结构
type HomeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    /// 分类id
	Name string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` /// 分类名
	List []*AppSetting `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"` /// 分类下配置页面数据
}

func (x *HomeData) Reset() {
	*x = HomeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeData) ProtoMessage() {}

func (x *HomeData) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeData.ProtoReflect.Descriptor instead.
func (*HomeData) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{10}
}

func (x *HomeData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomeData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HomeData) GetList() []*AppSetting {
	if x != nil {
		return x.List
	}
	return nil
}

// 优惠券结构
type Coupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                              /// 优惠券id
	Name     string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                           /// 优惠券名称
	Amount   float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`                     /// 优惠券面值
	MinPoint float64 `protobuf:"fixed64,4,opt,name=min_point,json=minPoint,proto3" json:"min_point,omitempty"` /// 使用门槛
	StartAt  int32   `protobuf:"varint,5,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`     /// 有效开始时间
	EndAt    int32   `protobuf:"varint,6,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`           /// 有效结束时间
	Note     string  `protobuf:"bytes,7,opt,name=note,proto3" json:"note,omitempty"`                           /// 描述
	Status   int32   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                      /// 状态
}

func (x *Coupon) Reset() {
	*x = Coupon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coupon) ProtoMessage() {}

func (x *Coupon) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coupon.ProtoReflect.Descriptor instead.
func (*Coupon) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{11}
}

func (x *Coupon) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Coupon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Coupon) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Coupon) GetMinPoint() float64 {
	if x != nil {
		return x.MinPoint
	}
	return 0
}

func (x *Coupon) GetStartAt() int32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *Coupon) GetEndAt() int32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *Coupon) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Coupon) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 公告结构
type Notice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                /// 公告id
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                           /// 公告标题
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                       /// 公告内容
	CreatedAt int32  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` /// 公告创建时间
}

func (x *Notice) Reset() {
	*x = Notice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notice) ProtoMessage() {}

func (x *Notice) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notice.ProtoReflect.Descriptor instead.
func (*Notice) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{12}
}

func (x *Notice) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Notice) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Notice) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Notice) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// 页面配置数据结构
type AppSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"` /// 配置类型
	// Types that are assignable to Data:
	//
	//	*AppSetting_Images
	//	*AppSetting_Navs
	//	*AppSetting_Ads
	//	*AppSetting_Product
	Data isAppSetting_Data `protobuf_oneof:"data"`
}

func (x *AppSetting) Reset() {
	*x = AppSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSetting) ProtoMessage() {}

func (x *AppSetting) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSetting.ProtoReflect.Descriptor instead.
func (*AppSetting) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{13}
}

func (x *AppSetting) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (m *AppSetting) GetData() isAppSetting_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *AppSetting) GetImages() *SettingImages {
	if x, ok := x.GetData().(*AppSetting_Images); ok {
		return x.Images
	}
	return nil
}

func (x *AppSetting) GetNavs() *SettingNavs {
	if x, ok := x.GetData().(*AppSetting_Navs); ok {
		return x.Navs
	}
	return nil
}

func (x *AppSetting) GetAds() *SettingAds {
	if x, ok := x.GetData().(*AppSetting_Ads); ok {
		return x.Ads
	}
	return nil
}

func (x *AppSetting) GetProduct() *SettingProduct {
	if x, ok := x.GetData().(*AppSetting_Product); ok {
		return x.Product
	}
	return nil
}

type isAppSetting_Data interface {
	isAppSetting_Data()
}

type AppSetting_Images struct {
	Images *SettingImages `protobuf:"bytes,2,opt,name=images,proto3,oneof"`
}

type AppSetting_Navs struct {
	Navs *SettingNavs `protobuf:"bytes,3,opt,name=navs,proto3,oneof"`
}

type AppSetting_Ads struct {
	Ads *SettingAds `protobuf:"bytes,4,opt,name=ads,proto3,oneof"`
}

type AppSetting_Product struct {
	Product *SettingProduct `protobuf:"bytes,5,opt,name=product,proto3,oneof"`
}

func (*AppSetting_Images) isAppSetting_Data() {}

func (*AppSetting_Navs) isAppSetting_Data() {}

func (*AppSetting_Ads) isAppSetting_Data() {}

func (*AppSetting_Product) isAppSetting_Data() {}

// 支付配置
type Pay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          /// 支付id
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       /// 支付名称
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"` /// 支付地址
}

func (x *Pay) Reset() {
	*x = Pay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pay) ProtoMessage() {}

func (x *Pay) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pay.ProtoReflect.Descriptor instead.
func (*Pay) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{14}
}

func (x *Pay) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Pay) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pay) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// 图片组结构
type SettingImages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SettingImages) Reset() {
	*x = SettingImages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingImages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingImages) ProtoMessage() {}

func (x *SettingImages) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingImages.ProtoReflect.Descriptor instead.
func (*SettingImages) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{15}
}

func (x *SettingImages) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

// 图标结构
type SettingNav struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"` // 标题
	Icon  string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`   // icon
}

func (x *SettingNav) Reset() {
	*x = SettingNav{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingNav) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingNav) ProtoMessage() {}

func (x *SettingNav) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingNav.ProtoReflect.Descriptor instead.
func (*SettingNav) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{16}
}

func (x *SettingNav) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SettingNav) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

// 图标组
type SettingNavs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SettingNav `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SettingNavs) Reset() {
	*x = SettingNavs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingNavs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingNavs) ProtoMessage() {}

func (x *SettingNavs) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingNavs.ProtoReflect.Descriptor instead.
func (*SettingNavs) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{17}
}

func (x *SettingNavs) GetList() []*SettingNav {
	if x != nil {
		return x.List
	}
	return nil
}

// 单图广告结构
type SettingAds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"` // 标题
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"` // 广告图
}

func (x *SettingAds) Reset() {
	*x = SettingAds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingAds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingAds) ProtoMessage() {}

func (x *SettingAds) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingAds.ProtoReflect.Descriptor instead.
func (*SettingAds) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{18}
}

func (x *SettingAds) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SettingAds) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

// 产品列表
type SettingProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router string `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"` // 路由
}

func (x *SettingProduct) Reset() {
	*x = SettingProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingProduct) ProtoMessage() {}

func (x *SettingProduct) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingProduct.ProtoReflect.Descriptor instead.
func (*SettingProduct) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{19}
}

func (x *SettingProduct) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

// es中sku结构
type SkuEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                /// sku_id
	Title     string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                           /// 商品标题
	Price     float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`                         /// 价格
	Cover     string  `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`                           /// 封面
	SaleCount int32   `protobuf:"varint,5,opt,name=sale_count,json=saleCount,proto3" json:"sale_count,omitempty"` /// 销量
	HasStock  bool    `protobuf:"varint,6,opt,name=has_stock,json=hasStock,proto3" json:"has_stock,omitempty"`    /// 是否有库存
}

func (x *SkuEs) Reset() {
	*x = SkuEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuEs) ProtoMessage() {}

func (x *SkuEs) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuEs.ProtoReflect.Descriptor instead.
func (*SkuEs) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{20}
}

func (x *SkuEs) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkuEs) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SkuEs) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SkuEs) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *SkuEs) GetSaleCount() int32 {
	if x != nil {
		return x.SaleCount
	}
	return 0
}

func (x *SkuEs) GetHasStock() bool {
	if x != nil {
		return x.HasStock
	}
	return false
}

// es中品牌结构
type BrandEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    /// 品牌id
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` /// 品牌名
	Logo string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"` /// 品牌logo
}

func (x *BrandEs) Reset() {
	*x = BrandEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandEs) ProtoMessage() {}

func (x *BrandEs) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandEs.ProtoReflect.Descriptor instead.
func (*BrandEs) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{21}
}

func (x *BrandEs) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandEs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandEs) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

// es中属性结构
type AttrEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`        /// 属性id
	Name   string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`     /// 属性名
	Values []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"` /// 属性值
}

func (x *AttrEs) Reset() {
	*x = AttrEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttrEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttrEs) ProtoMessage() {}

func (x *AttrEs) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttrEs.ProtoReflect.Descriptor instead.
func (*AttrEs) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{22}
}

func (x *AttrEs) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AttrEs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttrEs) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// es中分类结构
type CatEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    /// 分类id
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` /// 分类名
}

func (x *CatEs) Reset() {
	*x = CatEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatEs) ProtoMessage() {}

func (x *CatEs) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatEs.ProtoReflect.Descriptor instead.
func (*CatEs) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{23}
}

func (x *CatEs) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CatEs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 产品分类结构
type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             /// 分类id
	ParentId int32       `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"` /// 父id
	Sort     int32       `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`                         /// 排序值
	Name     string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                          /// 分类名
	Child    []*Category `protobuf:"bytes,5,rep,name=child,proto3" json:"child,omitempty"`                        /// 下级分类列表
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{24}
}

func (x *Category) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Category) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Category) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetChild() []*Category {
	if x != nil {
		return x.Child
	}
	return nil
}

// 商品详情结构
type Sku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                 /// sku_id
	SpuId     int32        `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`              /// spu_id
	CatId     int32        `protobuf:"varint,3,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`              /// 分类id
	BrandId   int32        `protobuf:"varint,4,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`        /// 品牌id
	Title     string       `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`                            /// 商品标题
	Desc      string       `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`                              /// 描述
	Cover     string       `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`                            /// 封面图
	Subtitle  string       `protobuf:"bytes,8,opt,name=subtitle,proto3" json:"subtitle,omitempty"`                      /// 副标题
	Price     float64      `protobuf:"fixed64,9,opt,name=price,proto3" json:"price,omitempty"`                          /// 价格
	SaleCount int32        `protobuf:"varint,10,opt,name=sale_count,json=saleCount,proto3" json:"sale_count,omitempty"` /// 销量
	Stock     int32        `protobuf:"varint,11,opt,name=stock,proto3" json:"stock,omitempty"`                          /// 库存
	IsMany    bool         `protobuf:"varint,12,opt,name=is_many,json=isMany,proto3" json:"is_many,omitempty"`          /// 是否多规格
	Skus      []*Skus      `protobuf:"bytes,13,rep,name=skus,proto3" json:"skus,omitempty"`                             /// spu下所有sku商品
	Attrs     []*Attrs     `protobuf:"bytes,14,rep,name=attrs,proto3" json:"attrs,omitempty"`                           /// 当前sku对应spu规格属性
	SaleAttrs []*SaleAttrs `protobuf:"bytes,15,rep,name=sale_attrs,json=saleAttrs,proto3" json:"sale_attrs,omitempty"`  ///当前sku下的销售属性
	Banners   []string     `protobuf:"bytes,16,rep,name=banners,proto3" json:"banners,omitempty"`                       /// sku图集
	Mains     []string     `protobuf:"bytes,17,rep,name=mains,proto3" json:"mains,omitempty"`                           /// spu介绍
}

func (x *Sku) Reset() {
	*x = Sku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sku) ProtoMessage() {}

func (x *Sku) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sku.ProtoReflect.Descriptor instead.
func (*Sku) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{25}
}

func (x *Sku) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Sku) GetSpuId() int32 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *Sku) GetCatId() int32 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *Sku) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *Sku) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Sku) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Sku) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *Sku) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *Sku) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Sku) GetSaleCount() int32 {
	if x != nil {
		return x.SaleCount
	}
	return 0
}

func (x *Sku) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *Sku) GetIsMany() bool {
	if x != nil {
		return x.IsMany
	}
	return false
}

func (x *Sku) GetSkus() []*Skus {
	if x != nil {
		return x.Skus
	}
	return nil
}

func (x *Sku) GetAttrs() []*Attrs {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *Sku) GetSaleAttrs() []*SaleAttrs {
	if x != nil {
		return x.SaleAttrs
	}
	return nil
}

func (x *Sku) GetBanners() []string {
	if x != nil {
		return x.Banners
	}
	return nil
}

func (x *Sku) GetMains() []string {
	if x != nil {
		return x.Mains
	}
	return nil
}

// sku销售属性结构
type SkuSaleAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                /// sku_id
	IsMany    bool         `protobuf:"varint,2,opt,name=is_many,json=isMany,proto3" json:"is_many,omitempty"`          /// 是否多规格
	Skus      []*Skus      `protobuf:"bytes,11,rep,name=skus,proto3" json:"skus,omitempty"`                            /// spu下所有sku商品
	SaleAttrs []*SaleAttrs `protobuf:"bytes,13,rep,name=sale_attrs,json=saleAttrs,proto3" json:"sale_attrs,omitempty"` ///当前sku下的销售属性
}

func (x *SkuSaleAttr) Reset() {
	*x = SkuSaleAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuSaleAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuSaleAttr) ProtoMessage() {}

func (x *SkuSaleAttr) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuSaleAttr.ProtoReflect.Descriptor instead.
func (*SkuSaleAttr) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{26}
}

func (x *SkuSaleAttr) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkuSaleAttr) GetIsMany() bool {
	if x != nil {
		return x.IsMany
	}
	return false
}

func (x *SkuSaleAttr) GetSkus() []*Skus {
	if x != nil {
		return x.Skus
	}
	return nil
}

func (x *SkuSaleAttr) GetSaleAttrs() []*SaleAttrs {
	if x != nil {
		return x.SaleAttrs
	}
	return nil
}

// sku商品基础信息
type SkuBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                 /// sku_id
	SpuId     int64  `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`              /// spu_id
	CatId     int64  `protobuf:"varint,3,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`              /// 分类id
	BrandId   int64  `protobuf:"varint,4,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`        /// 品牌id
	Title     string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`                            /// 商品标题
	Desc      string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`                              /// 描述
	Cover     string `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`                            /// 封面图
	Subtitle  string `protobuf:"bytes,8,opt,name=subtitle,proto3" json:"subtitle,omitempty"`                      /// 副标题
	Price     int64  `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty"`                           /// 价格
	SaleCount int64  `protobuf:"varint,10,opt,name=sale_count,json=saleCount,proto3" json:"sale_count,omitempty"` /// 销量
	AttrValue string `protobuf:"bytes,11,opt,name=attr_value,json=attrValue,proto3" json:"attr_value,omitempty"`  /// 销售属性值
}

func (x *SkuBase) Reset() {
	*x = SkuBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuBase) ProtoMessage() {}

func (x *SkuBase) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuBase.ProtoReflect.Descriptor instead.
func (*SkuBase) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{27}
}

func (x *SkuBase) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkuBase) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *SkuBase) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *SkuBase) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *SkuBase) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SkuBase) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SkuBase) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *SkuBase) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *SkuBase) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SkuBase) GetSaleCount() int64 {
	if x != nil {
		return x.SaleCount
	}
	return 0
}

func (x *SkuBase) GetAttrValue() string {
	if x != nil {
		return x.AttrValue
	}
	return ""
}

// 属性分组以及分组下规格属性结构
type Attrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   int32   `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`      /// 规格属性分组id
	GroupName string  `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"` /// 规格属性分组名
	Items     []*Attr `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`                          /// 分组下所有规格属性
}

func (x *Attrs) Reset() {
	*x = Attrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attrs) ProtoMessage() {}

func (x *Attrs) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attrs.ProtoReflect.Descriptor instead.
func (*Attrs) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{28}
}

func (x *Attrs) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Attrs) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Attrs) GetItems() []*Attr {
	if x != nil {
		return x.Items
	}
	return nil
}

// 属性结构
type Attr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`      /// 属性id
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`   /// 属性名
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"` /// 属性值
}

func (x *Attr) Reset() {
	*x = Attr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr) ProtoMessage() {}

func (x *Attr) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr.ProtoReflect.Descriptor instead.
func (*Attr) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{29}
}

func (x *Attr) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Attr) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attr) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// spu下所有sku
type Skus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId int32      `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"` /// sku_id
	Price float64    `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`             /// 价格
	Stock int32      `protobuf:"varint,3,opt,name=stock,proto3" json:"stock,omitempty"`              /// 库存
	Attrs []*SkuAttr `protobuf:"bytes,4,rep,name=attrs,proto3" json:"attrs,omitempty"`               /// 对应的销售属性
}

func (x *Skus) Reset() {
	*x = Skus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skus) ProtoMessage() {}

func (x *Skus) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skus.ProtoReflect.Descriptor instead.
func (*Skus) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{30}
}

func (x *Skus) GetSkuId() int32 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *Skus) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Skus) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *Skus) GetAttrs() []*SkuAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

// sku属性结构
type SkuAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrId    int32  `protobuf:"varint,1,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`         /// 属性id
	ValueId   int32  `protobuf:"varint,2,opt,name=value_id,json=valueId,proto3" json:"value_id,omitempty"`      /// 属性值id
	AttrName  string `protobuf:"bytes,3,opt,name=attr_name,json=attrName,proto3" json:"attr_name,omitempty"`    /// 属性名
	ValueName string `protobuf:"bytes,4,opt,name=value_name,json=valueName,proto3" json:"value_name,omitempty"` /// 属性值
}

func (x *SkuAttr) Reset() {
	*x = SkuAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuAttr) ProtoMessage() {}

func (x *SkuAttr) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuAttr.ProtoReflect.Descriptor instead.
func (*SkuAttr) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{31}
}

func (x *SkuAttr) GetAttrId() int32 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *SkuAttr) GetValueId() int32 {
	if x != nil {
		return x.ValueId
	}
	return 0
}

func (x *SkuAttr) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *SkuAttr) GetValueName() string {
	if x != nil {
		return x.ValueName
	}
	return ""
}

// sku下所有销售属性结构
type SaleAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrId   int32       `protobuf:"varint,1,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`      /// 销售属性id
	AttrName string      `protobuf:"bytes,2,opt,name=attr_name,json=attrName,proto3" json:"attr_name,omitempty"` /// 销售属性名
	Values   []*SkuValue `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`                     /// 属性值列表
}

func (x *SaleAttrs) Reset() {
	*x = SaleAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaleAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaleAttrs) ProtoMessage() {}

func (x *SaleAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaleAttrs.ProtoReflect.Descriptor instead.
func (*SaleAttrs) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{32}
}

func (x *SaleAttrs) GetAttrId() int32 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *SaleAttrs) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *SaleAttrs) GetValues() []*SkuValue {
	if x != nil {
		return x.Values
	}
	return nil
}

// 规格值结构
type SkuValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    /// 属性值id
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` /// 属性名
}

func (x *SkuValue) Reset() {
	*x = SkuValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_type_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuValue) ProtoMessage() {}

func (x *SkuValue) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuValue.ProtoReflect.Descriptor instead.
func (*SkuValue) Descriptor() ([]byte, []int) {
	return file_common_type_proto_rawDescGZIP(), []int{33}
}

func (x *SkuValue) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkuValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_common_type_proto protoreflect.FileDescriptor

var file_common_type_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x04,
	0x43, 0x61, 0x72, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x6b, 0x75, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6b, 0x75, 0x41, 0x74, 0x74, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x4b, 0x0a, 0x0b, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa6, 0x01, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x22, 0xdf, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x22, 0xab, 0x05, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x66,
	0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x70, 0x61, 0x79, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61,
	0x79, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6e, 0x6f, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6b, 0x75, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0xa2, 0x01, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6b, 0x75, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x6b, 0x75, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x64, 0x0a, 0x0c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x22, 0x66, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4b, 0x69, 0x6c,
	0x6c, 0x53, 0x6b, 0x75, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x22, 0xef, 0x01, 0x0a, 0x07, 0x4b,
	0x69, 0x6c, 0x6c, 0x53, 0x6b, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x22, 0x56, 0x0a, 0x08,
	0x48, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x67, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xe0, 0x01, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x6e, 0x61, 0x76, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x4e, 0x61, 0x76, 0x73, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x76, 0x73, 0x12, 0x26,
	0x0a, 0x03, 0x61, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x73, 0x48,
	0x00, 0x52, 0x03, 0x61, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x48,
	0x00, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x43, 0x0a, 0x03, 0x50, 0x61, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x23, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x0a,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x76, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e,
	0x61, 0x76, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x4e, 0x61, 0x76, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x0a, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x28, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x22,
	0x95, 0x01, 0x0a, 0x05, 0x53, 0x6b, 0x75, 0x45, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x61, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61,
	0x73, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68,
	0x61, 0x73, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x41, 0x0a, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x45, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x22, 0x44, 0x0a, 0x06, 0x41, 0x74,
	0x74, 0x72, 0x45, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0x2b, 0x0a, 0x05, 0x43, 0x61, 0x74, 0x45, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x87, 0x01,
	0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x22, 0xc7, 0x03, 0x0a, 0x03, 0x53, 0x6b, 0x75, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x73, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x6b, 0x75, 0x73, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x61, 0x74,
	0x74, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12,
	0x30, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x61, 0x6c,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x22, 0x8a, 0x01, 0x0a, 0x0b, 0x53, 0x6b, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x6b,
	0x75, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x6b, 0x75, 0x73, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x0a,
	0x73, 0x61, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x73, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x22, 0x92,
	0x02, 0x0a, 0x07, 0x53, 0x6b, 0x75, 0x42, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70,
	0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x65, 0x0a, 0x05, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x40, 0x0a, 0x04, 0x41, 0x74,
	0x74, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x70, 0x0a, 0x04,
	0x53, 0x6b, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x6b, 0x75, 0x41, 0x74, 0x74, 0x72, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0x79,
	0x0a, 0x07, 0x53, 0x6b, 0x75, 0x41, 0x74, 0x74, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x74, 0x74,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x74, 0x74, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x09, 0x53, 0x61, 0x6c,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6b, 0x75, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x2e, 0x0a, 0x08, 0x53, 0x6b, 0x75, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x3b, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_type_proto_rawDescOnce sync.Once
	file_common_type_proto_rawDescData = file_common_type_proto_rawDesc
)

func file_common_type_proto_rawDescGZIP() []byte {
	file_common_type_proto_rawDescOnce.Do(func() {
		file_common_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_type_proto_rawDescData)
	})
	return file_common_type_proto_rawDescData
}

var file_common_type_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_common_type_proto_goTypes = []interface{}{
	(*Cart)(nil),           // 0: common.Cart
	(*MemberToken)(nil),    // 1: common.MemberToken
	(*Member)(nil),         // 2: common.Member
	(*Address)(nil),        // 3: common.Address
	(*Order)(nil),          // 4: common.Order
	(*OrderList)(nil),      // 5: common.OrderList
	(*OrderSku)(nil),       // 6: common.OrderSku
	(*OrderAddress)(nil),   // 7: common.OrderAddress
	(*Session)(nil),        // 8: common.Session
	(*KillSku)(nil),        // 9: common.KillSku
	(*HomeData)(nil),       // 10: common.HomeData
	(*Coupon)(nil),         // 11: common.Coupon
	(*Notice)(nil),         // 12: common.Notice
	(*AppSetting)(nil),     // 13: common.AppSetting
	(*Pay)(nil),            // 14: common.Pay
	(*SettingImages)(nil),  // 15: common.SettingImages
	(*SettingNav)(nil),     // 16: common.SettingNav
	(*SettingNavs)(nil),    // 17: common.SettingNavs
	(*SettingAds)(nil),     // 18: common.SettingAds
	(*SettingProduct)(nil), // 19: common.SettingProduct
	(*SkuEs)(nil),          // 20: common.SkuEs
	(*BrandEs)(nil),        // 21: common.BrandEs
	(*AttrEs)(nil),         // 22: common.AttrEs
	(*CatEs)(nil),          // 23: common.CatEs
	(*Category)(nil),       // 24: common.Category
	(*Sku)(nil),            // 25: common.Sku
	(*SkuSaleAttr)(nil),    // 26: common.SkuSaleAttr
	(*SkuBase)(nil),        // 27: common.SkuBase
	(*Attrs)(nil),          // 28: common.Attrs
	(*Attr)(nil),           // 29: common.Attr
	(*Skus)(nil),           // 30: common.Skus
	(*SkuAttr)(nil),        // 31: common.SkuAttr
	(*SaleAttrs)(nil),      // 32: common.SaleAttrs
	(*SkuValue)(nil),       // 33: common.SkuValue
}
var file_common_type_proto_depIdxs = []int32{
	2,  // 0: common.MemberToken.member:type_name -> common.Member
	7,  // 1: common.Order.address:type_name -> common.OrderAddress
	6,  // 2: common.Order.items:type_name -> common.OrderSku
	6,  // 3: common.OrderList.items:type_name -> common.OrderSku
	9,  // 4: common.Session.skus:type_name -> common.KillSku
	13, // 5: common.HomeData.list:type_name -> common.AppSetting
	15, // 6: common.AppSetting.images:type_name -> common.SettingImages
	17, // 7: common.AppSetting.navs:type_name -> common.SettingNavs
	18, // 8: common.AppSetting.ads:type_name -> common.SettingAds
	19, // 9: common.AppSetting.product:type_name -> common.SettingProduct
	16, // 10: common.SettingNavs.list:type_name -> common.SettingNav
	24, // 11: common.Category.child:type_name -> common.Category
	30, // 12: common.Sku.skus:type_name -> common.Skus
	28, // 13: common.Sku.attrs:type_name -> common.Attrs
	32, // 14: common.Sku.sale_attrs:type_name -> common.SaleAttrs
	30, // 15: common.SkuSaleAttr.skus:type_name -> common.Skus
	32, // 16: common.SkuSaleAttr.sale_attrs:type_name -> common.SaleAttrs
	29, // 17: common.Attrs.items:type_name -> common.Attr
	31, // 18: common.Skus.attrs:type_name -> common.SkuAttr
	33, // 19: common.SaleAttrs.values:type_name -> common.SkuValue
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_common_type_proto_init() }
func file_common_type_proto_init() {
	if File_common_type_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillSku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coupon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingImages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingNav); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingNavs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingAds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttrEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuSaleAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Skus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaleAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_type_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_common_type_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*AppSetting_Images)(nil),
		(*AppSetting_Navs)(nil),
		(*AppSetting_Ads)(nil),
		(*AppSetting_Product)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_type_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_type_proto_goTypes,
		DependencyIndexes: file_common_type_proto_depIdxs,
		MessageInfos:      file_common_type_proto_msgTypes,
	}.Build()
	File_common_type_proto = out.File
	file_common_type_proto_rawDesc = nil
	file_common_type_proto_goTypes = nil
	file_common_type_proto_depIdxs = nil
}
